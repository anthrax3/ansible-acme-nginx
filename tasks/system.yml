- name: Ensure packages needed for basic ACME provisioning are present
  apt: name={{ item }} state=present
  with_items:
    - openssl
    - git
    - sudo
    - nginx
    - python3

- name: Ensure that our ACME user exists
  user:
    name: "{{ acme_user }}"
    createhome: no

- name: Setup our base SSL folder
  file:
    path: "{{ acme_ssl_base_folder | mandatory }}"
    state: directory
    owner: "{{ acme_user }}"
    group: www-data
    mode: 0750

- name: Clone acme_tiny
  git:
    repo: "{{ acme_tiny_repo_url }}"
    version: "{{ acme_tiny_repo_version }}"
    dest: "{{ acme_ssl_base_folder }}/acme-tiny"
  become: yes
  become_user: "{{ acme_user }}"

- name: Check if the account.key file already exists
  stat: path="/root/account.key"
  register: account_key_file

- name: Generates a letsencrypt account key if necessary
  command: "openssl genrsa 4096"
  register: account_key
  when: account_key_file.stat.exists == False

- name: Copy the account key to the appropriate file
  copy: content="{{ account_key.stdout }}" dest="/root/account.key"
  when: account_key is defined and account_key.stdout is defined

- name: setup account key perms
  file:
    path: "{{ acme_ssl_base_folder }}/account.key"
    owner: "{{ acme_user }}"
    mode: 0600

- name: Setup challenges folder
  file:
    path: "{{ acme_challenges_folder_path | mandatory }}"
    state: directory
    owner: "{{ acme_user }}"
    group: www-data
    mode: 0750
